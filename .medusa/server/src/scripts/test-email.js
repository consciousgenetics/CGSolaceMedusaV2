"use strict";
// Simple script to test SendGrid email directly
const sgMail = require('@sendgrid/mail');
require('dotenv').config();
// This should be set in your .env file
const SENDGRID_API_KEY = process.env.SENDGRID_API_KEY || 'YOUR_API_KEY_HERE';
const SENDGRID_FROM = process.env.SENDGRID_FROM || 'info@consciousgenetics.com';
const TEST_EMAIL = process.env.TEST_EMAIL || 'info@consciousgenetics.com';
// Log environment variables for debugging
console.log('Environment variables:');
console.log('- SENDGRID_API_KEY set:', !!process.env.SENDGRID_API_KEY);
console.log('- SENDGRID_FROM:', process.env.SENDGRID_FROM);
console.log('- TEST_EMAIL:', TEST_EMAIL);
// Initialize SendGrid
sgMail.setApiKey(SENDGRID_API_KEY);
// Create a simple test message
const msg = {
    to: TEST_EMAIL,
    from: SENDGRID_FROM,
    subject: 'SendGrid Test Email',
    text: 'This is a test email to verify SendGrid is working',
    html: '<strong>This is a test email to verify SendGrid is working</strong>',
};
// Send the test email
console.log('Attempting to send test email...');
sgMail.send(msg)
    .then((response) => {
    console.log('Email sent successfully!');
    console.log('Response:', response);
})
    .catch((error) => {
    console.error('Error sending email:');
    console.error(error);
    // Check for SendGrid API response
    if (error.response) {
        console.error('SendGrid API error response:');
        console.error(error.response.body);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC1lbWFpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zY3JpcHRzL3Rlc3QtZW1haWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLGdEQUFnRDtBQUNoRCxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUN6QyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7QUFFM0IsdUNBQXVDO0FBQ3ZDLE1BQU0sZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsSUFBSSxtQkFBbUIsQ0FBQztBQUM3RSxNQUFNLGFBQWEsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsSUFBSSw0QkFBNEIsQ0FBQztBQUNoRixNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsSUFBSSw0QkFBNEIsQ0FBQztBQUUxRSwwQ0FBMEM7QUFDMUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0FBQ3RDLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUN2RSxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDM0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFFekMsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUVuQywrQkFBK0I7QUFDL0IsTUFBTSxHQUFHLEdBQUc7SUFDVixFQUFFLEVBQUUsVUFBVTtJQUNkLElBQUksRUFBRSxhQUFhO0lBQ25CLE9BQU8sRUFBRSxxQkFBcUI7SUFDOUIsSUFBSSxFQUFFLG9EQUFvRDtJQUMxRCxJQUFJLEVBQUUscUVBQXFFO0NBQzVFLENBQUM7QUFFRixzQkFBc0I7QUFDdEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO0FBQ2hELE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO0tBQ2IsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUU7SUFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0lBQ3hDLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ3JDLENBQUMsQ0FBQztLQUNELEtBQUssQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO0lBQ2YsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBQ3RDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFckIsa0NBQWtDO0lBQ2xDLElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25CLE9BQU8sQ0FBQyxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQztRQUM5QyxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckMsQ0FBQztBQUNILENBQUMsQ0FBQyxDQUFDIn0=